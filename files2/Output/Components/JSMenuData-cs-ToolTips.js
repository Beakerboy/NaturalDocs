NDContentPage.OnToolTipsLoaded({226:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype226\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Collections.</span>&#8203;StringTable&#8203;<span class=\"TemplateSignature\">&lt;ObjectType&gt;</span></div></div></div><div class=\"TTSummary\">A generic lookup table for mapping strings to other objects.&nbsp; This is preferable to a Dictionary&lt;string, object&gt; class because:</div></div>",1517:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1517\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;IDObjects.</span>&#8203;NumberSet</div></div></div><div class=\"TTSummary\">A class for efficiently storing a large list of ID numbers and determining which ones are still available.&nbsp; Also focuses on reusing deleted ID numbers rather than continuing on in autoincrement fashion.</div></div>",2300:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2300\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Output.&#8203;Builders.</span>&#8203;HTML</div></div></div><div class=\"TTSummary\">An output builder for HTML.</div></div>",2509:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2509\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Output.&#8203;Components.</span>&#8203;JSMenuData</div></div></div><div class=\"TTSummary\">A helper class to build the JavaScript menu data for Output.Builders.HTML.&nbsp; See &lt;JavaScript Menu Data&gt; for the output format.</div></div>",2511:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2511\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> JSMenuData (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Builders.</td><td class=\"PType\">HTML&nbsp;</td><td class=\"PName last\">htmlBuilder</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",2512:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2512\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> StringTable&lt;IDObjects.NumberSet&gt; Build ()</div><div class=\"TTSummary\">Generates JSON files for all entries in the menu.&nbsp; It returns a StringTable mapping the file type strings (&quot;files&quot;, &quot;classes&quot;, etc.) to a IDObjects.NumberSet representing all the files that were generated.&nbsp; So &quot;files.js&quot;, &quot;files2.js&quot;, and &quot;files3.js&quot; would map to &quot;files&quot; -&gt; {1-3}.</div></div>",2515:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2515\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> BuildOutput (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MenuEntries.Base.</td><td class=\"PType\">Container&nbsp;</td><td class=\"PName last\">container</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Generates the output file for the container.&nbsp; It must have ContainerExtraData.DataFileName set.&nbsp; If it finds any sub-containers that also have that set, it will recursively generate files for them as well.</div></div>",2526:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2526\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> GenerateJSON (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Builders.</td><td class=\"PType\">HTML&nbsp;</td><td class=\"PName last\">htmlBuilder,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">JSMenuData&nbsp;</td><td class=\"PName last\">menu</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",2535:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2535\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> GenerateJSON (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Builders.</td><td class=\"PType\">HTML&nbsp;</td><td class=\"PName last\">htmlBuilder,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">JSMenuData&nbsp;</td><td class=\"PName last\">menu</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",2538:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2538\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> DataFileName { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">If this container starts a new data file this will be its file name, such as &quot;files2.js&quot; or &quot;classes.js&quot;.&nbsp; It will not include a path.&nbsp; If this container doesn\'t start a new data file, this will be null.</div></div>",2670:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2670\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Output.&#8203;MenuEntries.&#8203;Base.</span>&#8203;Target</div></div></div><div class=\"TTSummary\">A base class for Entries that cause navigation, such as a file or a class, as opposed to a Container.</div></div>",2694:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2694\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Output.&#8203;MenuEntries.&#8203;Base.</span>&#8203;Container</div></div></div><div class=\"TTSummary\">A base class for Entries which can contain other entries, such as folders.</div></div>",2816:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2816\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Output.</span>&#8203;Menu</div></div></div><div class=\"TTSummary\">A class for generating a menu tree.</div></div>"});