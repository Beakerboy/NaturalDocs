NDSummary.OnToolTipsLoaded("File2:Output/Components/HTMLPrototype.cs",{2577:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2577\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Output.&#8203;Components.</span>&#8203;HTMLPrototype</div></div></div><div class=\"TTSummary\">A reusable helper class to build prototypes for Output.Builders.HTML.</div></div>",2580:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype2580\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public enum</span> ColumnType : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">A prototype\'s parameter column type.&nbsp; Note that the prototype CSS classes are directly mapped to these names.</div></div>",2590:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2590\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> HTMLPrototype (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">HTMLTopicPage&nbsp;</td><td class=\"PName last\">topicPage</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",2591:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2591\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public string</span> Build (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Topic&nbsp;</td><td class=\"PName last\">topic,</td></tr><tr><td class=\"PType first\">IList&lt;Link&gt;&nbsp;</td><td class=\"PName last\">links,</td></tr><tr><td class=\"PType first\">IList&lt;Topic&gt;&nbsp;</td><td class=\"PName last\">linkTargets</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Builds the HTML for the Topic\'s prototype and returns it as a string.&nbsp; If the string is going to be appended to a StringBuilder, it is more efficient to use the other function.</div></div>",2592:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2592\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> Build (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Topic&nbsp;</td><td class=\"PName last\">topic,</td></tr><tr><td class=\"PType first\">IList&lt;Link&gt;&nbsp;</td><td class=\"PName last\">links,</td></tr><tr><td class=\"PType first\">IList&lt;Topic&gt;&nbsp;</td><td class=\"PName last\">linkTargets,</td></tr><tr><td class=\"PType first\">StringBuilder&nbsp;</td><td class=\"PName last\">output</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Builds the HTML for the Topic\'s prototype and appends it to the passed StringBuilder.</div></div>",2593:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2593\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected void</span> BuildPrePrototypeLines ()</div></div>",2594:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2594\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected void</span> BuildPostPrototypeLines ()</div></div>",2595:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2595\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected bool</span> CalculateColumns (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">parameterIndex</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Fills in columnIndexes for the passed parameter.&nbsp; If the parameter doesn\'t exist it will return false.</div></div>",2596:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2596\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> GetColumn (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">columnIndex,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\">TokenIterator&nbsp;</td><td class=\"PName last\">start,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\">TokenIterator&nbsp;</td><td class=\"PName last\">end,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\">ColumnType&nbsp;</td><td class=\"PName last\">type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the bounds of a parameter\'s column and what type it is, which depends on ColumnOrder.&nbsp; You <b>must</b> call CalculateColumns() beforehand.&nbsp; Returns false if the column index is out of bounds or the contents are empty for that particular slot.</div></div>",2597:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2597\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected string</span> BuildCellContents (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">TokenIterator&nbsp;</td><td class=\"PName last\">start,</td></tr><tr><td class=\"PType first\">TokenIterator&nbsp;</td><td class=\"PName last\">end,</td></tr><tr><td class=\"PType first\">ColumnType&nbsp;</td><td class=\"PName last\">type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Unlike other functions, this returns the contents as a string rather than appending it to &lt;htmlOutput&gt;.</div></div>",2598:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2598\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> BuildCell (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">contents,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">ColumnType&nbsp;</td><td class=\"PName\">type,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">extraClass&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">null</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",2599:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2599\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected void</span> BuildParameterTable ()</div></div>",2600:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2600\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected void</span> BuildNoParameterForm ()</div></div>",2601:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2601\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected void</span> BuildWideForm ()</div></div>",2602:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2602\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected void</span> BuildNarrowForm ()</div></div>",2604:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2604\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> NumberOfColumns { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Returns the number of columns used in the parameter style.</div></div>",2605:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype2605\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> ColumnType[] ColumnOrder { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Returns the column order array appropriate for the parameter style.&nbsp; Do not change the data.</div></div>",2607:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2607\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> ParsedPrototype parsedPrototype</div><div class=\"TTSummary\">The prototype as a ParsedPrototype object.</div></div>",2608:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2608\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> Languages.Language language</div><div class=\"TTSummary\">The Languages.Language of the prototype.</div></div>",2609:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2609\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span>[] columnIndexes</div><div class=\"TTSummary\">An array of symbol indexes representing the starting position of each column.&nbsp; The indexes are taken from TokenIterator.TokenIndex and so are relative to the start of parsedPrototype rather than the parameter.</div></div>",2610:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2610\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> endOfColumnsIndex</div><div class=\"TTSummary\">The symbol index of the end of the last column in columnIndexes.</div></div>",2611:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2611\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span>[] columnWidths</div><div class=\"TTSummary\">The width in characters of each column.</div></div>",2612:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2612\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[,] htmlCells</div><div class=\"TTSummary\">The HTML contents of each parameter cell, not including the td tags.&nbsp; The first index is the parameter, the second is the column.</div></div>",2613:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2613\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected bool</span> addLinks</div><div class=\"TTSummary\">Whether to add type links to the prototype.</div></div>",2615:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2615\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static public</span> ColumnType[] CColumnOrder</div><div class=\"TTSummary\">An array of ColumnTypes representing the order in which columns should appear for C-style prototypes.</div></div>",2616:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2616\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static public</span> ColumnType[] PascalColumnOrder</div><div class=\"TTSummary\">An array of ColumnTypes representing the order in which columns should appear for Pascal-style prototypes.</div></div>"});