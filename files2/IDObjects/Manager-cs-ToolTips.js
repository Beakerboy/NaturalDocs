NDContentPage.OnToolTipsLoaded({226:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype226\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Collections.</span>&#8203;StringTable&#8203;<span class=\"TemplateSignature\">&lt;ObjectType&gt;</span></div></div></div><div class=\"TTSummary\">A generic lookup table for mapping strings to other objects.&nbsp; This is preferable to a Dictionary&lt;string, object&gt; class because:</div></div>",282:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype282\" class=\"NDPrototype NoParameterForm\"><div class=\"PPrePrototypeLine\"><span class=\"SHMetadata\">[Flags]</span></div><span class=\"SHKeyword\">public enum</span> KeySettings : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">The way to handle keys in collections like StringSet.&nbsp; These are flags and may be combined.</div></div>",1514:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1514\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> List&lt;IDObjectType&gt; objectsByID</div><div class=\"TTSummary\">An array of objects.&nbsp; If sparse is false, the index location corresponds to its numeric ID.&nbsp; If sparse is true, the objects will be in ID order but you have to use a binary search to find the ID you want.</div></div>",1516:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1516\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected bool</span> sparse</div><div class=\"TTSummary\">Whether objectsByID is sparse or not.</div></div>",1517:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1517\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;IDObjects.</span>&#8203;NumberSet</div></div></div><div class=\"TTSummary\">A class for efficiently storing a large list of ID numbers and determining which ones are still available.&nbsp; Also focuses on reusing deleted ID numbers rather than continuing on in autoincrement fashion.</div></div>",1562:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1562\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">abstract public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;IDObjects.</span>&#8203;Base</div></div></div><div class=\"TTSummary\">The base class for all objects to be managed with IDObjects.Manager.</div></div>"});