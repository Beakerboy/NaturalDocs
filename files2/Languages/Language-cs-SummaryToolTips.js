NDSummary.OnToolTipsLoaded("File2:Languages/Language.cs",{1786:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1786\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Languages.</span>&#8203;Language</div></div></div><div class=\"TTSummary\">A class encapsulating information about a language.&nbsp; This differs from ConfigFileLanguage in that its meant to represent the final combined settings of a language rather than its entry in a config file.&nbsp; For example, this class doesn\'t store the language\'s extensions or shebang strings.</div></div>",1788:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype1788\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public enum</span> EnumValues : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">Can be Global, UnderType, or UnderParent.</div></div>",1789:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype1789\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public enum</span> LanguageType : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">The type of language or file this is.</div></div>",1794:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype1794\" class=\"NDPrototype NoParameterForm\"><div class=\"PPrePrototypeLine\"><span class=\"SHMetadata\">[Flags]</span></div><span class=\"SHKeyword\">protected enum</span> LanguageFlags : <span class=\"SHKeyword\">byte</span></div></div>",1801:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1801\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Language (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Languages.</td><td class=\"PType\">Manager&nbsp;</td><td class=\"PName last\">manager,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">name</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a new language object.</div></div>",1802:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1802\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> GenerateAlternateCommentStyles ()</div><div class=\"TTSummary\">If the language has basic support and they\'re not already defined, generate &lt;JavadocLineCommentStringPairs&gt;, &lt;JavadocBlockCommentStringPairs&gt;, and &lt;XMLLineCommentStrings&gt; automatically from &lt;BlockCommentStringPairs&gt; and &lt;LineCommentStrings&gt;.</div></div>",1804:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1804\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> Languages.Manager Manager { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The Languages.Manager associated with this language.</div></div>",1805:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1805\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> Engine.Instance EngineInstance { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The Engine.Instance associated with this language.</div></div>",1806:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1806\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> SimpleIdentifier { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">The name of the language using only the letters A to Z.</div></div>",1807:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1807\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> LanguageType Type { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">The type of the language or file.</div></div>",1808:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1808\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> MemberOperator { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">A string representing the default member operator symbol.</div></div>",1809:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1809\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> LineExtender { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">A string representing the line extender symbol if line breaks are significant to the language.</div></div>",1810:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1810\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> PrototypeEnders GetPrototypeEnders (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">commentTypeID</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the PrototypeEnders for the passed comment type, or null if there are none.</div></div>",1811:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1811\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> SetPrototypeEnders (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">commentTypeID,</td></tr><tr><td class=\"PType first\">PrototypeEnders&nbsp;</td><td class=\"PName last\">prototypeEnders</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the PrototypeEnders for the passed comment type.</div></div>",1812:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1812\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public int</span>[] GetCommentTypesWithPrototypeEnders()</div><div class=\"TTSummary\">Returns an array of all the comment types that have prototype enders defined, or null if none.</div></div>",1813:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1813\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> EnumValues EnumValue { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">How enum values are referenced.</div></div>",1814:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1814\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> CaseSensitive { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">Whether the language\'s identifiers are case sensitive.</div></div>",1815:"<div class=\"NDToolTip TGroup LCSharp\"><div class=\"TTSummary\">These properties do not affect the equality operators.</div></div>",1816:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1816\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> InSystemFile { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">Whether this language was defined in the system Languages.txt file.</div></div>",1817:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1817\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> InProjectFile { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">Whether this language was defined in the project Languages.txt file.</div></div>",1818:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1818\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> InConfigFiles { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Whether this language was defined in either of the Languages.txt files.</div></div>",1819:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1819\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> InBinaryFile { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">Whether this language was present in Languages.nd.</div></div>",1820:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1820\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> Predefined { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">Whether this language is predefined by Natural Docs.</div></div>",1822:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1822\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool operator</span> == (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Language&nbsp;</td><td class=\"PName last\">language1,</td></tr><tr><td class=\"PType first\">Language&nbsp;</td><td class=\"PName last\">language2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns whether all the properties of the two languages are equal, including Name and ID, but excluding flags.</div></div>",1823:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1823\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool operator</span> != (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Language&nbsp;</td><td class=\"PName last\">language1,</td></tr><tr><td class=\"PType first\">Language&nbsp;</td><td class=\"PName last\">language2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns if any of the properties of the two languages are inequal, including Name and ID, but excluding flags.</div></div>",1824:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1824\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool</span> StringArraysAreEqual (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>[]&nbsp;</td><td class=\"PName last\">array1,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>[]&nbsp;</td><td class=\"PName last\">array2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Compares two arrays of strings, ignoring the order they exist in.&nbsp; Is case sensitive and safe to use with nulls.</div></div>",1825:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1825\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool</span> StringPairArraysAreEqual (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>[]&nbsp;</td><td class=\"PName last\">array1,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>[]&nbsp;</td><td class=\"PName last\">array2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Compares two arrays of string pairs, ignoring the order they exist in.&nbsp; Is case sensitive and safe to use with nulls.</div></div>",1826:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1826\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected static bool</span> PrototypeEndersAreEqual (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">SafeDictionary&lt;<span class=\"SHKeyword\">int</span>, PrototypeEnders&gt;&nbsp;</td><td class=\"PName last\">commentTypesToPrototypeEnders1,</td></tr><tr><td class=\"PType first\">SafeDictionary&lt;<span class=\"SHKeyword\">int</span>, PrototypeEnders&gt;&nbsp;</td><td class=\"PName last\">commentTypesToPrototypeEnders2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Compares two prototype ender dictionaries.&nbsp; Is case sensitive and safe to use with nulls.</div></div>",1828:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1828\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public override bool</span> Equals (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName last\">o</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",1829:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1829\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public override int</span> GetHashCode ()</div></div>",1831:"<div class=\"NDToolTip TVariable LCSharp\"><div class=\"TTSummary\">The Languages.Manager this language is associated with.</div></div>",1832:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1832\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> Languages.Manager manager</div></div>",1833:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1833\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span> simpleIdentifier</div><div class=\"TTSummary\">The language\'s name using only the letters A to Z, or null if it\'s not defined.</div></div>",1834:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1834\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> LanguageType type</div><div class=\"TTSummary\">The type of the language or file.</div></div>",1835:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1835\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span> memberOperator</div><div class=\"TTSummary\">A string representing the default member operator symbol.</div></div>",1836:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1836\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> SafeDictionary&lt;<span class=\"SHKeyword\">int</span>, PrototypeEnders&gt; commentTypesToPrototypeEnders</div><div class=\"TTSummary\">A dictionary mapping comment type IDs to PrototypeEnders.</div></div>",1837:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1837\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span> lineExtender</div><div class=\"TTSummary\">A string representing the line extender symbol if line breaks are significant to the language.</div></div>",1838:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1838\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> EnumValues enumValue</div><div class=\"TTSummary\">How the language handles enum values.</div></div>",1839:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1839\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected bool</span> caseSensitive</div><div class=\"TTSummary\">Whether the language is case sensitive or not.</div></div>",1840:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1840\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> LanguageFlags flags</div><div class=\"TTSummary\">A combination of &lt;FlagValues&gt; describing the language.</div></div>"});