NDSummary.OnToolTipsLoaded("File2:Languages/CommentFinder.cs",{1912:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1912\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Languages.</span>&#8203;CommentFinder</div></div></div><div class=\"TTSummary\">A class that handles finding possible documenatation comments in any source file in a generic way.</div></div>",1914:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1914\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> CommentFinder (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">name</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",1915:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1915\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> List&lt;PossibleDocumentationComment&gt; GetPossibleDocumentationComments (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">source</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Goes through the source looking for comments that could possibly contain documentation and returns them as a list.&nbsp; These comments are not guaranteed to have documentation in them, just to be acceptable candidates for them.&nbsp; If there are no comments it will return an empty list.</div></div>",1916:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1916\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual public</span> List&lt;PossibleDocumentationComment&gt; GetPossibleDocumentationComments (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Tokenizer&nbsp;</td><td class=\"PName last\">source</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Goes through the file looking for comments that could possibly contain documentation and returns them as a list.&nbsp; These comments are not guaranteed to have documentation in them, just to be acceptable candidates for them.&nbsp; If there are no comments it will return an empty list.</div></div>",1918:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1918\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected bool</span> TryToGetBlockComment (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">ref</span>&nbsp;</td><td class=\"PType\">LineIterator&nbsp;</td><td class=\"PName last\">lineIterator,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">openingSymbol,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">closingSymbol,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">openingMustBeAlone,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\">PossibleDocumentationComment&nbsp;</td><td class=\"PName last\">comment</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">If the iterator is on a line that starts with the opening symbol of a block comment, this function moves the iterator past the entire comment and returns true.&nbsp; If the comment is a candidate for documentation it will also return it as a PossibleDocumentationComment and mark the symbols as CommentParsingType.CommentSymbol.&nbsp; If the line does not start with an opening comment symbol it will return false and leave the iterator where it is.</div></div>",1919:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1919\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected bool</span> TryToGetLineComment (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">ref</span>&nbsp;</td><td class=\"PType\">LineIterator&nbsp;</td><td class=\"PName last\">lineIterator,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">firstSymbol,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">remainderSymbol,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">openingMustBeAlone,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\">PossibleDocumentationComment&nbsp;</td><td class=\"PName last\">comment</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">If the iterator is on a line that starts with a line comment symbol, this function moves the iterator past the entire comment and returns true.&nbsp; If the comment is a candidate for documentation it will also return it as a PossibleDocumentationComment and mark the symbols as CommentParsingType.CommentSymbol.&nbsp; If the line does not start with a line comment symbol it will return false and leave the iterator where it is.</div></div>",1921:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1921\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">override public string</span> Name { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The name of the language.</div></div>",1922:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1922\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] LineCommentStrings { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array of strings representing line comment symbols.&nbsp; Will be null if none are defined.</div></div>",1923:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1923\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] BlockCommentStringPairs { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array of string pairs representing start and stop block comment symbols.&nbsp; Will be null if none are defined.</div></div>",1924:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1924\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] JavadocLineCommentStringPairs { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array of string pairs representing Javadoc line comment symbols.&nbsp; The first are are the symbols that must start the comment, and the second are the symbols that must be used on every following line.&nbsp; Will be null if none are defined.</div></div>",1925:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1925\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] JavadocBlockCommentStringPairs { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array of string pairs representing start and stop Javadoc block comment symbols.&nbsp; Will be null if none are defined.</div></div>",1926:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1926\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] XMLLineCommentStrings { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array of strings representing XML line comment symbols.&nbsp; Will be null if none are defined.</div></div>",1928:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1928\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span> name</div><div class=\"TTSummary\">The language name.</div></div>",1929:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1929\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] lineCommentStrings</div><div class=\"TTSummary\">An array of strings that start line comments.</div></div>",1930:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1930\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] blockCommentStringPairs</div><div class=\"TTSummary\">An array of string pairs that start and end block comments.</div></div>",1931:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1931\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] javadocLineCommentStringPairs</div><div class=\"TTSummary\">An array of string pairs that start Javadoc line comments.&nbsp; The first will be the symbol that must start it, and the second will be the symbol that must be used on every following line.</div></div>",1932:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1932\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] javadocBlockCommentStringPairs</div><div class=\"TTSummary\">An array of string pairs that start and end Javadoc black comments.</div></div>",1933:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1933\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] xmlLineCommentStrings</div><div class=\"TTSummary\">An array of strings that start XML line comments.</div></div>"});