NDSummary.OnToolTipsLoaded("File2:Languages/ConfigFileLanguage.cs",{1863:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1863\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Languages.</span>&#8203;ConfigFileLanguage</div></div></div><div class=\"TTSummary\">A class encapsulating information about a language as it appears in Languages.txt.&nbsp; This differs from Language in that its meant to represent its entry in a config file rather than the final combined settings of a language.</div></div>",1865:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1865\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> ConfigFileLanguage (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">newName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">newAlterLanguage,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">newLineNumber</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",1866:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1866\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> Name { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The name of the language.</div></div>",1867:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1867\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> SimpleIdentifier { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">The name of the language using only the letters A to Z, or null if it\'s not set.</div></div>",1868:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1868\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] Aliases { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array of the aliases for this language.&nbsp; Will be null if none are defined.</div></div>",1869:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1869\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> AddAliases { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">Whether Aliases is adding to the list instead of replacing it.</div></div>",1870:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1870\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> AlterLanguage { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Whether this is an Alter Language entry or not.</div></div>",1871:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1871\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public int</span> LineNumber { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The number at which the language appears in the file.</div></div>",1872:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1872\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] Extensions { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array of the file extensions representing this language.&nbsp; Will be null if none are defined.</div></div>",1873:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1873\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> AddExtensions { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">Whether Extensions is adding to the file extension list or replacing it.</div></div>",1874:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1874\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] ShebangStrings { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array of the shebang strings representing this language.&nbsp; Will be null if none are defined.</div></div>",1875:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1875\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> AddShebangStrings { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">Whether ShebangStrings is adding to the list or replacing it.</div></div>",1876:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1876\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] LineCommentStrings { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array of strings representing line comment symbols.&nbsp; Will be null if none are defined.</div></div>",1877:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1877\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] BlockCommentStringPairs { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array of string pairs representing start and stop block comment symbols.&nbsp; Will be null if none are defined.</div></div>",1878:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1878\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> MemberOperator { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">A string representing the default member operator symbol.&nbsp; Will be null if not defined.</div></div>",1879:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1879\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> LineExtender { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">A string representing the line extender symbol if line breaks are significant to the language.&nbsp; Will be null if not defined.</div></div>",1880:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1880\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public string</span>[] GetPrototypeEnderStrings (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">commentTypeName</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the prototype ender strings for the passed comment type, or null if there are none.&nbsp; If line breaks are supported they will appear in this list as &quot;\\n&quot;.</div></div>",1881:"<div class=\"NDToolTip TFunction LCSharp\"><div class=\"TTSummary\">Sets the prototype ender strings for the passed comment type.&nbsp; If line breaks are supported they should be included in the array as &quot;\\n&quot;.</div></div>",1882:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1882\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> SetPrototypeEnderStrings (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">commentTypeName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>[]&nbsp;</td><td class=\"PName last\">prototypeEnderStrings</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",1883:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1883\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] GetCommentTypeNamesWithPrototypeEnders()</div><div class=\"TTSummary\">Returns an array of all the comment types that have prototype enders defined, or null if none.</div></div>",1884:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1884\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> Language.EnumValues? EnumValue { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">How enum values are referenced.&nbsp; Will be null if not defined.</div></div>",1885:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1885\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span>? CaseSensitive { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">Whether the language\'s identifiers are case sensitive.&nbsp; Will be null if not set.</div></div>",1886:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1886\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> FixNameCapitalization (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">newName</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Replaces Name with a version with alternate capitalization but is otherwise equal.</div></div>",1887:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1887\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> FixPrototypeEnderCommentTypeCapitalization (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>[]&nbsp;</td><td class=\"PName last\">newCommentTypeNames</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Replaces the list of comment types with prototype enders with versions that have alternate capitalization but are otherwise equal.&nbsp; You pass to it an array of names in the same order as returned by GetCommentTypeNamesWithPrototypeEnders().</div></div>",1889:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1889\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span> name</div><div class=\"TTSummary\">The language name.</div></div>",1890:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1890\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected bool</span> alterLanguage</div><div class=\"TTSummary\">Whether this is an Alter Language entry.</div></div>",1891:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1891\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> lineNumber</div><div class=\"TTSummary\">The line number at which the language appears in the file.</div></div>",1892:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1892\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span> simpleIdentifier</div><div class=\"TTSummary\">The language name using only the letters A to Z, or null if not set.</div></div>",1893:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1893\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] aliases</div><div class=\"TTSummary\">An array of the aliases for this language.&nbsp; Will be null if not set.</div></div>",1894:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1894\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected bool</span> addAliases</div><div class=\"TTSummary\">If this is an Alter Language entry, the aliases should be added to the original list instead of replacing them.</div></div>",1895:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1895\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] extensions</div><div class=\"TTSummary\">An array of the file extensions for this language.&nbsp; Will be null if not set.</div></div>",1896:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1896\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected bool</span> addExtensions</div><div class=\"TTSummary\">If this is an Alter Language entry, the extensions should be added to the original list instead of replacing them.</div></div>",1897:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1897\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] shebangStrings</div><div class=\"TTSummary\">An array of the shebang strings for this language.&nbsp; Will be null if not set.</div></div>",1898:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1898\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected bool</span> addShebangStrings</div><div class=\"TTSummary\">If this is an Alter Language entry, the shebang strings should be added to the original list instead of replacing them.</div></div>",1899:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1899\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] lineCommentStrings</div><div class=\"TTSummary\">An array of strings that start line comments.&nbsp; Will be null if not set.</div></div>",1900:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1900\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] blockCommentStringPairs</div><div class=\"TTSummary\">An array of string pairs that start and end block comments.&nbsp; Will be null if not set.</div></div>",1901:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1901\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span> memberOperator</div><div class=\"TTSummary\">A string representing the default member operator symbol.&nbsp; Will be null if not set.</div></div>",1902:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1902\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> List&lt;ConfigFilePrototypeEnders&gt; prototypeEndersList</div><div class=\"TTSummary\">A list of ConfigFilePrototypeEnders mapping comment type strings to arrays of ender strings.&nbsp; Line breaks are represented with &quot;\\n&quot;.&nbsp; Will be null if not set.</div></div>",1903:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1903\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span> lineExtender</div><div class=\"TTSummary\">A string representing the line extender symbol if line breaks are significant to the language.&nbsp; Will be null if not set.</div></div>",1904:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1904\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> Language.EnumValues? enumValue</div><div class=\"TTSummary\">How the language handles enum values.&nbsp; Will be null if not set.</div></div>",1905:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1905\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected bool</span>? caseSensitive</div><div class=\"TTSummary\">Whether the language\'s identifiers are case sensitive.&nbsp; Will be null if not set.</div></div>",1906:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1906\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">protected</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Languages.&#8203;ConfigFileLanguage.</span>&#8203;ConfigFilePrototypeEnders</div></div></div></div>",1908:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1908\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> ConfigFilePrototypeEnders()</div></div>",1910:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1910\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> CommentTypeName</div></div>",1911:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1911\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span>[] EnderStrings</div><div class=\"TTSummary\">An array of ender strings which may be symbols and/or &quot;\\n&quot;.</div></div>"});