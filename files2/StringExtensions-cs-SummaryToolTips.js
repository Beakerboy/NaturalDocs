NDSummary.OnToolTipsLoaded("File2:StringExtensions.cs",{3741:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3741\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">static public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;StringExtensions</div></div></div><div class=\"TTSummary\">A static class for all the functions added to the string type.</div></div>",3743:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3743\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public string</span> CondenseWhitespace (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Replaces all strings of whitespace characters with a single space.</div></div>",3744:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3744\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public string</span> RemoveWhitespace (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Removes all whitespace from the string.</div></div>",3745:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3745\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public string</span> NormalizeLineBreaks (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Replaces all line breaks in a string with the native platform\'s format, which is CRLF for Windows and LF for Mac/Linux.</div></div>",3746:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3746\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public string</span>[] SplitLines (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the string as an array of lines regardless of the format of line break it contains.</div></div>",3747:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3747\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static string</span> NormalizeKey (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key,</td></tr><tr><td class=\"PModifierQualifier first\">Collections.</td><td class=\"PType\">KeySettings&nbsp;</td><td class=\"PName last\">keySettings</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Normalizes a string key by applying Collections.KeySettings.</div></div>",3748:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3748\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static string</span> OnlyAToZ (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Converts the passed string to a version that only contains the letters A to Z.&nbsp; All other characters are stripped or replaced with related characters.&nbsp; If there are no ASCII characters available it returns null.</div></div>",3749:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3749\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static string</span> ToHTML (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">text</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Converts the plain text string to HTML.&nbsp; This encodes &lt;, &gt;, &quot;, and &amp; as entity characters and encodes double spaces with &amp;nbsp;.</div></div>",3750:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3750\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static string</span> ConvertCopyrightAndTrademark (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns a string with all occurrances of (c), (r), and (tm) converted to their respective Unicode characters.</div></div>",3751:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3751\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static string</span> ConvertLineBreaksToBR (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Replaces line breaks in any format with &lt;br&gt; tags.&nbsp; If you plan to use this and ConvertMultipleWhitespaceChars(), you must call this function first.</div></div>",3752:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3752\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static string</span> ConvertMultipleWhitespaceChars (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Replaces instances of at least two whitespace characters in a row with &amp;nbsp; and a space.&nbsp; If you plan to use this and ConvertLineBreaksToBR(), you must call the other function first.</div></div>",3753:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3753\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public int</span> Count (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">char</span>&nbsp;</td><td class=\"PName last\">character</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the number of times the passed character appears in the string.</div></div>",3754:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3754\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public int</span> Count (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">char</span>&nbsp;</td><td class=\"PName last\">character,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">length</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the number of times the passed character appears in the string segment.</div></div>",3756:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3756\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static string</span> EntityEncode (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">char</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the input character as a string with &lt;, &gt;, &quot;, and &amp; replaced by their entity encodings.&nbsp; Technically an extension to char instead of string.</div></div>",3757:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3757\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static string</span> EntityEncode (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the string with &lt;, &gt;, &quot;, and &amp; replaced by their entity encodings.&nbsp; If the result string will be appended to a StringBuilder, it is more efficient to use StringBuilderExtensions.EntityEncodeAndAppend() instead of this function.</div></div>",3758:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3758\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static string</span> EntityDecode (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the string with &lt;, &gt;, &quot;, and &amp; restored from their entity encodings.</div></div>",3759:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3759\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static string</span> StringEscape (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the string with &quot;, \', and \\ escaped so that they can be put into a JavaScript string.&nbsp; If the result will be appended to a StringBuilder, it is more efficient to use StringBuilderExtensions.StringEscapeAndAppend() instead of this function.</div></div>",3761:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3761\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static public char</span>[] EntityCharLiterals</div><div class=\"TTSummary\">An array of characters that would need to be converted to entity characters in &lt;NDMarkup&gt;.&nbsp; Useful for String.IndexOfAny(char[]).</div></div>",3762:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3762\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static public char</span>[] EscapedStringChars</div><div class=\"TTSummary\">An array of characters that must be escaped in a JavaScript string.</div></div>",3763:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3763\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static public char</span>[] LineBreakChars</div></div>",3764:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3764\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static public</span> Regex.WhitespaceChars WhitespaceCharsRegex</div></div>",3765:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3765\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static public</span> Regex.NDMarkup.CopyrightAndTrademark CopyrightAndTrademarkRegex</div></div>",3766:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3766\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static public</span> Regex.MultipleWhitespaceChars MultipleWhitespaceCharsRegex</div></div>",3767:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3767\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">static public</span> Regex.LineBreak LineBreakRegex</div></div>"});