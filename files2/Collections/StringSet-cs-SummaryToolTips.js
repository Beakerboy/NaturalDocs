NDSummary.OnToolTipsLoaded("File2:Collections/StringSet.cs",{241:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype241\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Collections.</span>&#8203;StringSet</div></div></div><div class=\"TTSummary\">A general lookup table for tracking the existence of strings in a set.&nbsp; This is preferable to a HashSet class because</div></div>",243:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype243\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> StringSet (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">KeySettings&nbsp;</td><td class=\"PName\">keySettings&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">KeySettings.Literal</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates an empty set.</div></div>",244:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype244\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> StringSet (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">KeySettings&nbsp;</td><td class=\"PName last\">keySettings,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">params</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>[]&nbsp;</td><td class=\"PName last\">members</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a set with the passed strings as members.</div></div>",245:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype245\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public void</span> Add (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a new string to the set.&nbsp; Nothing happens if the string is already in it.</div></div>",246:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype246\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public bool</span> Remove (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Removes the string from the set.</div></div>",247:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype247\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public bool</span> Contains (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns whether the string exists in the set.&nbsp; Always returns false for null.</div></div>",248:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype248\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> RemoveOne ()</div><div class=\"TTSummary\">Removes and returns an arbitrary string from the set.&nbsp; If the set is empty it will return null.</div></div>",249:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype249\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool operator</span>== (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">StringSet&nbsp;</td><td class=\"PName last\">set1,</td></tr><tr><td class=\"PType first\">StringSet&nbsp;</td><td class=\"PName last\">set2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",250:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype250\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool operator</span>!= (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">StringSet&nbsp;</td><td class=\"PName last\">set1,</td></tr><tr><td class=\"PType first\">StringSet&nbsp;</td><td class=\"PName last\">set2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",251:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype251\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public override bool</span> Equals (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName last\">other</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",252:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype252\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public override int</span> GetHashCode ()</div></div>",253:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype253\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> ToBinaryFile (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">BinaryFile&nbsp;</td><td class=\"PName last\">binaryFile</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the contents of the string set to the passed binary file.</div></div>",254:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype254\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public</span> StringSet FromBinaryFile (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">BinaryFile&nbsp;</td><td class=\"PName\">binaryFile,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">KeySettings&nbsp;</td><td class=\"PName\">keySettings&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">KeySettings.Literal</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Reads the contents of the string set from the passed binary file.</div></div>",256:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype256\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> IsEmpty { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Whether there are any strings in the set.</div></div>",258:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype258\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> KeySettings keySettings</div><div class=\"TTSummary\">Which normalizations to apply to the keys.</div></div>",259:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype259\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public static</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Collections.</span>&#8203;StringSet_BinaryFileExtensions</div></div></div></div>",261:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype261\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public</span> StringSet ReadStringSet (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\">BinaryFile&nbsp;</td><td class=\"PName\">binaryFile,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"first\"></td><td class=\"PType\">KeySettings&nbsp;</td><td class=\"PName\">keySettings&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">KeySettings.Literal</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">An extension method to BinaryFile which reads a string set from it.&nbsp; Call with &quot;stringSet = binaryFile.ReadStringSet(ignoreCase, normalizeUnicode);&quot;</div></div>",262:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype262\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public void</span> WriteStringSet (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">this</span>&nbsp;</td><td class=\"PType\">BinaryFile&nbsp;</td><td class=\"PName last\">binaryFile,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">StringSet&nbsp;</td><td class=\"PName last\">stringSet</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">An extension method to BinaryFile which writes the string set to it.&nbsp; Call with &quot;binaryFile.WriteStringSet(stringSet);&quot;</div></div>"});