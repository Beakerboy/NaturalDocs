NDSummary.OnToolTipsLoaded("File2:Collections/StringTable.cs",{226:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype226\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Collections.</span>&#8203;StringTable&#8203;<span class=\"TemplateSignature\">&lt;ObjectType&gt;</span></div></div></div><div class=\"TTSummary\">A generic lookup table for mapping strings to other objects.&nbsp; This is preferable to a Dictionary&lt;string, object&gt; class because:</div></div>",228:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype228\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> StringTable (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">KeySettings&nbsp;</td><td class=\"PName\">keySettings&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">KeySettings.Literal</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates an empty table.</div></div>",229:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype229\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public void</span> Add (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key,</td></tr><tr><td class=\"PType first\">ObjectType&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a new value to the table, overwriting the previous value if it already existed.</div></div>",230:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype230\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public bool</span> Remove (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Removes a value from the table.&nbsp; Returns whether the key was present in the table or not.&nbsp; It does not throw an exception if it did not exist.</div></div>",231:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype231\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public bool</span> ContainsKey (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns whether the table contains a specific key.&nbsp; Always returns false for null.</div></div>",233:"<div class=\"NDToolTip TOperator LCSharp\"><div id=\"NDPrototype233\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public</span> ObjectType <span class=\"SHKeyword\">this</span> [</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">] { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</td></tr></table></div><div class=\"TTSummary\">An index operator.&nbsp; When getting, returns null if the key doesn\'t exist instead of throwing an exception.&nbsp; When setting, creates an entry for the key or overwrites the existing one if it doesn\'t exist.</div></div>",235:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype235\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool operator</span>== (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">StringTable&lt;ObjectType&gt;&nbsp;</td><td class=\"PName last\">table1,</td></tr><tr><td class=\"PType first\">StringTable&lt;ObjectType&gt;&nbsp;</td><td class=\"PName last\">table2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",236:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype236\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool operator</span>!= (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">StringTable&lt;ObjectType&gt;&nbsp;</td><td class=\"PName last\">table1,</td></tr><tr><td class=\"PType first\">StringTable&lt;ObjectType&gt;&nbsp;</td><td class=\"PName last\">table2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",237:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype237\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public override bool</span> Equals (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName last\">other</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",238:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype238\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public override int</span> GetHashCode ()</div></div>",240:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype240\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> KeySettings keySettings</div><div class=\"TTSummary\">What normalizations to apply to the keys.</div></div>"});