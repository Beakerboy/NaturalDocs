NDSummary.OnToolTipsLoaded("File2:CommandLine.cs",{4011:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype4011\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;CommandLine</div></div></div><div class=\"TTSummary\">A class to handle command line parsing.</div></div>",4013:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4013\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> CommandLine (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>[]&nbsp;</td><td class=\"PName last\">commandLineSegments</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",4014:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4014\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> AddAliases (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">parameter,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">params</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>[]&nbsp;</td><td class=\"PName last\">aliases</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Registers command line aliases, such as &quot;-i&quot; and &quot;--input&quot;.&nbsp; The first one is the one that will be returned by GetParameter().</div></div>",4016:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4016\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> GetParameter (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">parameter,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">parameterAsEntered</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Attempts to return a command line parameter, like &quot;-i&quot;.&nbsp; Will return false if the current position is not on a parameter.</div></div>",4017:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4017\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> GetBareWord (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">bareWord</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Attempts to retrieve a single bare word from the command line, like &quot;HTML&quot; in &quot;-o HTML [path]&quot;.&nbsp; Returns false if the current position is not on a bare word.</div></div>",4018:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4018\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> GetBareWordsToNextParameter (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">bareWords</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Attempts to retrieve all the bare words between the current position and the next parameter as a single string.&nbsp; Returns false if the current position is not on a bare word.</div></div>",4019:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4019\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected bool</span> GetQuotedWords (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">quotedWords</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Attempts to retrieve a quoted section of text.&nbsp; The returned string will not include the quotes.&nbsp; Returns false if the current position is not on quoted words.</div></div>",4020:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4020\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> GetPath (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\">Path&nbsp;</td><td class=\"PName last\">path</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Attempts to retrieve a path from the command line.&nbsp; Returns false if the current position is not on a path.</div></div>",4021:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4021\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> SkipToNextParameter ()</div><div class=\"TTSummary\">Moves the position to the next parameter, skipping any values along the way.&nbsp; Note that if the position is already on a parameter it will NOT move.</div></div>",4023:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4023\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> NoValue ()</div><div class=\"TTSummary\">Call this after GetParameter() if it must not be followed by a value.&nbsp; If it is it will return true.</div></div>",4024:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4024\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> GetIntegerValue (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">integer</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Call this after GetParameter() if it must be followed by an integer.&nbsp; If it is it will return true and the integer.&nbsp; If there\'s any other value or no value following the parameter it will return false.</div></div>",4025:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4025\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> GetPathValue (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\">Path&nbsp;</td><td class=\"PName last\">path</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Call this after GetParameter() if it must be followed by a path.&nbsp; If it is it will return true and the path.&nbsp; If there\'s any other value or no value following the parameter it will return false.</div></div>",4026:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4026\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> GetBareWordAndPathValue (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">bareWord,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\">Path&nbsp;</td><td class=\"PName last\">path</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Call this after GetParameter() if it must be followed by a bare word and then a path, such as &quot;-o [format] [folder]&quot;.&nbsp; If it is it will return true and the values.&nbsp; If it\'s not in the correct format it will return false.</div></div>",4027:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4027\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> GetBareOrQuotedWordsValue (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">words</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Call this after GetParameter() if it must be followed by bare words or a quoted string.&nbsp; If it is it will return true and the values.&nbsp; Quotes will not be included in the result, and unquoted words will be retrieved until the next parameter.&nbsp; If it\'s not in the correct format it will return false.</div></div>",4029:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4029\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> FindClosingQuote ()</div><div class=\"TTSummary\">Returns the index of the segment with a closing quote, assuming index is on a segment with an opening quote.&nbsp; Will return -1 if there isn\'t one.</div></div>",4030:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4030\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected void</span> SkipQuotedSection ()</div><div class=\"TTSummary\">Moves index past the entire quoted section, assuming index is currently on a segment which starts with a quote.</div></div>",4032:"<div class=\"NDToolTip TProperty LCSharp\"><div class=\"TTSummary\">Whether the current position is in bounds.</div></div>",4033:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype4033\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> IsInBounds { <span class=\"SHKeyword\">get</span> }</div></div>",4034:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype4034\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> IsOnParameter { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Whether the current position is on a parameter.</div></div>",4035:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype4035\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> IsOnQuotedSection { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Whether the current position is on the beginning of a quoted section.</div></div>",4036:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype4036\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> IsOnBareWord { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Whether the current position is on a bare word, meaning not a parameter or a quoted string.</div></div>",4037:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype4037\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> IsOnPath { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Whether the current position is on something that can be interpreted as a path, either a bare word or a quoted string.</div></div>",4039:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype4039\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected string</span>[] segments</div><div class=\"TTSummary\">The original command line as an array of strings</div></div>",4040:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype4040\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> index</div><div class=\"TTSummary\">The current position as an index into segments.</div></div>",4041:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype4041\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> StringToStringTable aliases</div><div class=\"TTSummary\">A list of command line aliases, such as &quot;-i&quot; and &quot;--input&quot;.</div></div>"});