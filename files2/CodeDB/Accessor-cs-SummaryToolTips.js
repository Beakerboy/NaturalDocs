NDSummary.OnToolTipsLoaded("File2:CodeDB/Accessor.cs",{145:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype145\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;CodeDB.</span>&#8203;Accessor</div></div></div><div class=\"TTSummary\">A class threads can use to access the code database.</div></div>",148:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype148\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public enum</span> LockType : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">The type of lock held.&nbsp; These have increasing values so you can use operators like &gt;=.</div></div>",153:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype153\" class=\"NDPrototype NoParameterForm\"><div class=\"PPrePrototypeLine\"><span class=\"SHMetadata\">[Flags]</span></div><span class=\"SHKeyword\">public enum</span> GetTopicFlags : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">When querying topics from the database, not all fields may be needed in all circumstances.&nbsp; This is a bitfield that allows you to specify which fields can be ignored.&nbsp; In debug builds this is enforced by Topic, so if you try to access any of these fields an exception will be thrown.</div></div>",160:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype160\" class=\"NDPrototype NoParameterForm\"><div class=\"PPrePrototypeLine\"><span class=\"SHMetadata\">[Flags]</span></div><span class=\"SHKeyword\">public enum</span> GetLinkFlags : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">When querying links from the database, not all fields may be needed in all circumstances.&nbsp; This is a bitfield that allows you to specify which fields can be ignored.&nbsp; In debug builds this is enforced by Link, so if you try to access any of these fields an exception will be thrown.</div></div>",164:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype164\" class=\"NDPrototype NoParameterForm\"><div class=\"PPrePrototypeLine\"><span class=\"SHMetadata\">[Flags]</span></div><span class=\"SHKeyword\">public enum</span> GetImageLinkFlags : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">When querying image links from the database, not all fields may be needed in all circumstances.&nbsp; This is a bitfield that allows you to specify which fields can be ignored.&nbsp; In debug builds this is enforced by ImageLink, so if you try to access any of these fields an exception will be thrown.</div></div>",168:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype168\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">internal</span> Accessor (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">CodeDB.</td><td class=\"PType\">Manager&nbsp;</td><td class=\"PName last\">manager,</td></tr><tr><td class=\"PModifierQualifier first\">SQLite.</td><td class=\"PType\">Connection&nbsp;</td><td class=\"PName last\">connection,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">priority</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",169:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype169\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> Dispose ()</div></div>",171:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype171\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> GetReadOnlyLock ()</div><div class=\"TTSummary\">Acquires a read-only lock on the database which cannot be upgraded to a read/write lock.</div></div>",172:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype172\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> GetReadPossibleWriteLock ()</div><div class=\"TTSummary\">Acquires a read-only lock on the database which can be upgraded to a read/write lock.&nbsp; The database is guaranteed not to change between when this lock is acquired and when the lock is successfully upgraded.</div></div>",173:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype173\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> UpgradeToReadWriteLock ()</div><div class=\"TTSummary\">Upgrades a read/possible write lock to a read/write lock.&nbsp; This is safe to call multiple times, and you still only need to call DowngradeToReadPossibleWriteLock() or ReleaseLock() once.</div></div>",174:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype174\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> DowngradeToReadPossibleWriteLock ()</div><div class=\"TTSummary\">Downgrades a read/write lock to a read/possible write lock so that other readers may access the database again.&nbsp; This is safe to call multiple times.</div></div>",175:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype175\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> ReleaseLock ()</div><div class=\"TTSummary\">Releases any locks held, regardless of type.&nbsp; Is safe to call when no locks are held.</div></div>",177:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype177\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected internal void</span> RequireAtLeast (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">LockType&nbsp;</td><td class=\"PName last\">minimum</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enforces a minimum lock level for an operation.&nbsp; If a read/write lock is required and a read/possible write lock is held, it will be upgraded automatically.&nbsp; Otherwise if the lock held does not meet the minimum it will throw an exception.</div></div>",178:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype178\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> RequireZero (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operation,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Throws an exception if the value is not zero.</div></div>",179:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype179\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> RequireZero (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operation,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">long</span>&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Throws an exception if the value is not zero.</div></div>",180:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype180\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> RequireNonZero (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operation,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Throws an exception if the value is zero.</div></div>",181:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype181\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> RequireNull (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operation,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Throws an exception if the value is not null.</div></div>",182:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype182\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> RequireContent (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operation,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Throws an exception if the value is null or an empty string.</div></div>",183:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype183\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> RequireValue (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operation,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">fieldValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">expectedValue</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Throws an exception if the field value doesn\'t match the expected value.</div></div>",184:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype184\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> RequireValue (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operation,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">expectedValue</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Throws an exception if the field value doesn\'t match the expected value.</div></div>",185:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype185\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> RequireNotValue (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operation,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">fieldValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">forbiddenValue</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Throws an exception if the field value matches the forbidden value.</div></div>",186:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype186\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> RequireNotValue (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operation,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldName,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">fieldValue,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">forbiddenValue</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Throws an exception if the field value matches the forbidden value.</div></div>",188:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype188\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> CodeDB.Manager Manager { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The CodeDB.Manager associated with this accessor.</div></div>",189:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype189\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> Engine.Instance EngineInstance { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The Engine.Instance associated with this accessor.</div></div>",190:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype190\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">internal</span> SQLite.Connection Connection { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">This accessor\'s connection to the database.&nbsp; Only to be used by EventAccessor.</div></div>",191:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype191\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> LockType LockHeld { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The type of lock currently held, if any.</div></div>",193:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype193\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> CodeDB.Manager manager</div><div class=\"TTSummary\">The CodeDB.Manager associated with this accessor.</div></div>",194:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype194\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> SQLite.Connection connection</div><div class=\"TTSummary\">This accessor\'s connection to the database.</div></div>",195:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype195\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> LockType lockHeld</div><div class=\"TTSummary\">The lock currently held by this accessor, if any.</div></div>",196:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype196\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected bool</span> priority</div><div class=\"TTSummary\">Whether this is a priority accessor or not.</div></div>",197:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype197\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> transactionLevel</div><div class=\"TTSummary\">How many nested transactions we are in, or zero if none.&nbsp; If -1, the transaction was broken with an exception.</div></div>",198:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype198\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> IDLookupCache&lt;Symbols.ClassString&gt; classIDLookupCache</div><div class=\"TTSummary\">A cache mapping Symbols.ClassStrings to their IDs.&nbsp; This is useful because ClassStrings are going to be reused many times throughout a file and this way we don\'t have to hit the database for each individual Topic added.&nbsp; This is only valid while we have a database lock so it\'s cleared automatically by ReleaseLock().</div></div>",199:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype199\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> IDLookupCache&lt;Symbols.ContextString&gt; contextIDLookupCache</div><div class=\"TTSummary\">A cache mapping contexts to their IDs.&nbsp; This is useful because contexts are going to be reused many times throughout a file and this way we don\'t have to hit the database for each individual Topic added.&nbsp; This is only valid while we have a database lock so it\'s cleared automatically by ReleaseLock().</div></div>",201:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype201\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected const int</span> NumberSetExpressionExpansionLimit</div><div class=\"TTSummary\">The number of ranges ColumnIsInNumberSetExpression will limit itself to before it makes you use multiple queries.</div></div>",202:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype202\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected const int</span> NumberSetExpressionExpansionLimit</div></div>"});