NDContentPage.OnToolTipsLoaded({3097:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3097\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Symbols.</span>&#8203;UsingString</div></div></div><div class=\"TTSummary\">A struct encapsulating a using string, which is a normalized way of representing a single &quot;using&quot; statement.</div></div>",3099:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype3099\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public enum</span> UsingType : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">Which effectthe using statement has.</div></div>",3100:"<div class=\"NDToolTip TConstant LCSharp\"><div class=\"TTSummary\">The statement adds a prefix to symbols.&nbsp; An AddPrefix statement for &quot;PackageA.PackageB&quot; means &quot;Symbol&quot; can be interpreted as &quot;PackageA.PackageB.Symbol&quot;.</div></div>",3101:"<div class=\"NDToolTip TConstant LCSharp\"><div class=\"TTSummary\">The statement can replace a prefix on symbols.&nbsp; A ReplacePrefix statement for &quot;PackageA&quot; to &quot;PackageB&quot; means &quot;PackageA.Symbol&quot; can be interpreted as &quot;PackageB.Symbol&quot;.</div></div>",3103:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype3103\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public const char</span> SeparatorChar</div><div class=\"TTSummary\">The character used to separate string components.</div></div>",3118:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype3118\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public const char</span> Level1</div><div class=\"TTSummary\">A character that can be used to separate strings which do not contain any other separator characters.</div></div>",3119:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype3119\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public const char</span> Level2</div><div class=\"TTSummary\">A character that can be used to separate strings which may contain Level1 characters.</div></div>",3124:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3124\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Symbols.</span>&#8203;SymbolString</div></div></div><div class=\"TTSummary\">A struct encapsulating a symbol string, which is a normalized way of representing a hierarchal code element or topic, such as &quot;PackageA.PackageB.FunctionC&quot;.</div></div>"});