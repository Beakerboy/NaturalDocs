NDSummary.OnToolTipsLoaded("File:StatusManager.cs",{4171:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype4171\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;CLI.</span>&#8203;StatusManager</div></div></div><div class=\"TTSummary\">A base class for all status managers, which handle posting status messages for long tasks.&nbsp; They can post beginning and/or ending messages, as well as updates on a set interval if the task takes long enough to require it.</div></div>",4173:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4173\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> StatusManager (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">updateInterval,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName\">hideIfShorterThan&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a new status manager.</div></div>",4174:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4174\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual public void</span> Start()</div><div class=\"TTSummary\">Starts monitoring the task.&nbsp; If you override this function make sure to call the base class\'s version.</div></div>",4175:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4175\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> Update(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">Object&nbsp;</td><td class=\"PName last\">sender,</td></tr><tr><td class=\"PModifierQualifier first\">System.Timers.</td><td class=\"PType\">ElapsedEventArgs&nbsp;</td><td class=\"PName last\">args</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Called periodically to update the status message.&nbsp; This is handled automatically, you don\'t need to manually call it.</div></div>",4176:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4176\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> End()</div><div class=\"TTSummary\">Ends monitoring.</div></div>",4177:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4177\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> Dispose ()</div></div>",4178:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4178\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected virtual void</span> ShowStartMessage ()</div><div class=\"TTSummary\">Override this function to display a message at the start of a task.&nbsp; If hideIfShorterThan was specified, this will only be called if the task runs too long.&nbsp; Otherwise it will always be called.</div></div>",4179:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4179\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected virtual void</span> ShowUpdateMessage ()</div><div class=\"TTSummary\">Override this function to display a progress message if the task runs too long.&nbsp; This can be called many times or not at all.</div></div>",4180:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4180\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected virtual void</span> ShowEndMessage ()</div><div class=\"TTSummary\">Override this function to display a message at the end of a task.&nbsp; If hideIfShorterThan was specified, this will only be called if the task ran too long.&nbsp; Otherwise it will always be called.</div></div>",4182:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype4182\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> System.Timers.Timer timer</div><div class=\"TTSummary\">The timer used to call Update().</div></div>",4183:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype4183\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> updateInterval</div><div class=\"TTSummary\">The number of milliseconds between status updates if the task takes a long time.&nbsp; If this is zero, only start and end messages will be displayed.</div></div>",4184:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype4184\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> hideIfShorterThan</div><div class=\"TTSummary\">The number of milliseconds where if the task starts and completes within this interval, no status is displayed at all.&nbsp; This will also be set to zero if it was specified and the task ran long.</div></div>"});