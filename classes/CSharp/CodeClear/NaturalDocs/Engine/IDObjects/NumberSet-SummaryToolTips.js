NDSummary.OnToolTipsLoaded("CSharpClass:CodeClear.NaturalDocs.Engine.IDObjects.NumberSet",{1517:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1517\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;IDObjects.</span>&#8203;NumberSet</div></div></div><div class=\"TTSummary\">A class for efficiently storing a large list of ID numbers and determining which ones are still available.&nbsp; Also focuses on reusing deleted ID numbers rather than continuing on in autoincrement fashion.</div></div>",1519:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1519\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> NumberSet ()</div><div class=\"TTSummary\">Creates an empty number set.</div></div>",1520:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1520\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> NumberSet (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a number set from the passed string.&nbsp; It is safe to use with null or the empty string.</div></div>",1521:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1521\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> NumberSet (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">NumberSet&nbsp;</td><td class=\"PName last\">toCopy</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a number set by duplicating the passed one.</div></div>",1522:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1522\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected</span> NumberSet (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">numberOfRanges</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Reads a number set with the passed number of ranges preallocated.</div></div>",1523:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1523\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> Add (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">number</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds the specified number to the set.&nbsp; Returns true if the number didn\'t already exist in the set and was added, false if it was already in the set.</div></div>",1524:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1524\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> Add (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">NumberSet&nbsp;</td><td class=\"PName last\">setToAdd</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds the contents of an entire set from this one.</div></div>",1525:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1525\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> Remove (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">number</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Removes the specified number from the set.&nbsp; Returns true if the number existed in the set and was removed, false if it wasn\'t part of the set.</div></div>",1526:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1526\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> Remove (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">NumberSet&nbsp;</td><td class=\"PName last\">setToRemove</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Removes the contents of an entire set from this one.</div></div>",1527:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1527\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public int</span> Pop ()</div><div class=\"TTSummary\">Removes the highest value from the set and returns it.&nbsp; Will return zero if the set is empty.</div></div>",1528:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1528\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> Contains (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">number</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns whether the set contains the passed number.</div></div>",1529:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1529\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> Clear ()</div><div class=\"TTSummary\">Removes all entries from the set, making it empty.</div></div>",1530:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1530\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> NumberSet ExtractRanges (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">index,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">count</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a new set from the specified ranges.&nbsp; Note that the index and length refer to Ranges, not to values.</div></div>",1531:"<div class=\"NDToolTip TOperator LCSharp\"><div id=\"NDPrototype1531\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public bool operator</span>== (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">NumberSet&nbsp;</td><td class=\"PName last\">setA,</td></tr><tr><td class=\"PType first\">NumberSet&nbsp;</td><td class=\"PName last\">setB</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",1532:"<div class=\"NDToolTip TOperator LCSharp\"><div id=\"NDPrototype1532\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public bool operator</span>!= (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">NumberSet&nbsp;</td><td class=\"PName last\">setA,</td></tr><tr><td class=\"PType first\">NumberSet&nbsp;</td><td class=\"PName last\">setB</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",1533:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1533\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">override public bool</span> Equals (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName last\">o</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",1534:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1534\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public override int</span> GetHashCode ()</div></div>",1535:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1535\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public override string</span> ToString ()</div><div class=\"TTSummary\">Returns the set as a string.</div></div>",1536:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1536\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public</span> NumberSet FromString (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">input</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a NumberSet from a string.&nbsp; Throws an exception if it\'s not in the correct format.&nbsp; The format isn\'t documented because it should only be used with strings generated by ToString().&nbsp; This is safe to use with a null or empty string.</div></div>",1537:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1537\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> ToBinaryFile (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">BinaryFile&nbsp;</td><td class=\"PName last\">binaryFile</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes the number set to a BinaryFile.</div></div>",1538:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1538\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public</span> NumberSet FromBinaryFile (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">BinaryFile&nbsp;</td><td class=\"PName last\">binaryFile</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Reads a number set from the current position in a BinaryFile.</div></div>",1539:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1539\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected bool</span> Validate()</div><div class=\"TTSummary\">Checks whether ranges is in the proper format to be used.</div></div>",1540:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1540\" class=\"NDPrototype NoParameterForm\">System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</div><div class=\"TTSummary\">Returns an enumerator that returns each value.&nbsp; This allows the number set to be used with foreach.</div></div>",1542:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1542\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> IsEmpty { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Whether the set is empty.</div></div>",1543:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1543\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public int</span> LowestAvailable { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The lowest unused number available, starting at one.</div></div>",1544:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1544\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public int</span> Highest { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The highest number in the set or zero if the set is empty.</div></div>",1545:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1545\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public int</span> Count { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">How many discrete numbers are in the set.</div></div>",1546:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1546\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> IEnumerable&lt;NumberRange&gt; Ranges { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Returns an enumerator that returns each NumberRange in the set.&nbsp; This property is usable with foreach.</div></div>",1547:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1547\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public int</span> RangeCount { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">How many ranges are in the set.</div></div>",1549:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1549\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected int</span> FindRangeIndex (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">number</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Finds the NumberRange that would hold the passed number and returns its index into the array.&nbsp; If the number is not in the array, it returns the index of the range above it (the insertion point if a new range were to be created.)&nbsp; If it\'s lower than any range, it returns zero.&nbsp; If it\'s higher than any range, it returns the index past the last range so you must check the result against usedRanges.</div></div>",1550:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1550\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> InsertAtIndex (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a space in ranges for a new NumberRange at the specified index.&nbsp; If necessary, will reallocate the array.&nbsp; The values in the new space are undefined.</div></div>",1551:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1551\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> RemoveAtIndex (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Removes a NumberRange from ranges at the specified index and moves everything else down.</div></div>",1552:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1552\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected static int</span> ShouldShrinkTo (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">arrayLength,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">dataLength</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">If an array should be replaced with a smaller one given the passed data and array sizes, returns the new array size that should be used.&nbsp; If the array shouldn\'t be reallocated this will return the existing length.</div></div>",1554:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype1554\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public const string</span> EmptySetString</div><div class=\"TTSummary\">The string that is generated by ToString() for an empty set.&nbsp; Will not be null.</div></div>",1556:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1556\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> NumberRange[] ranges</div><div class=\"TTSummary\">An array of NumberRanges representing used numbers.&nbsp; The bounds are inclusive.&nbsp; Single digits are stored as a range with the high and low bounds being the same.</div></div>",1557:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1557\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> usedRanges</div><div class=\"TTSummary\">The length of the <b>used</b> array in ranges since the array may be larger than the content.</div></div>"});