NDSummary.OnToolTipsLoaded("CSharpClass:CodeClear.NaturalDocs.Engine.CodeDB.ReferenceChangeCache",{29:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype29\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;CodeDB.</span>&#8203;ReferenceChangeCache</div></div></div><div class=\"TTSummary\">A class that stores changes to reference counts in memory so they don\'t have to hit the database on every operation.</div></div>",31:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype31\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> ReferenceChangeCache()</div></div>",32:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype32\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> AddReference (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">objectID</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Increases the reference count of the passed object ID.&nbsp; This is ignored if the ID is zero.</div></div>",33:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype33\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> RemoveReference (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">objectID</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Decreases the reference count of the passed object ID.&nbsp; This is ignored if the ID is zero.</div></div>",34:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype34\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> SetDatabaseReferenceCount (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">objectID,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">databaseReferences</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of references the passed object ID has according to the database.&nbsp; This is before any changes stored in this cache are applied.</div></div>",35:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype35\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> ReferenceChangeEntry ChangesFor (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">id</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the ReferenceChangeEntry for the passed ID, or null if there is none.</div></div>",36:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype36\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected int</span> BinarySearch (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">objectID</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Searches the list for the passed object ID.&nbsp; If it finds it, the return value will be zero or positive representing the index of the item.&nbsp; If it doesn\'t, the return value will be the bitwise complement of the index the item should be inserted at.&nbsp; This is consistent with the system used by System.Collections.Generic.List.BinarySearch().</div></div>"});