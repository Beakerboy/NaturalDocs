NDContentPage.OnToolTipsLoaded({981:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype981\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public enum</span> Source : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">A configuration source.</div></div>",1160:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1160\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Errors.</span>&#8203;ErrorList</div></div></div><div class=\"TTSummary\">A list of Error objects.</div></div>",1187:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1187\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> Path File { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The Path the error occurs in, if appropriate.&nbsp; Will be null otherwise.</div></div>",1188:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1188\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public int</span> LineNumber { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">The line number in the File the error occurs in, if appropriate.&nbsp; Will be zero otherwise.</div></div>",3567:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3567\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;Version</div></div></div><div class=\"TTSummary\">A struct for dealing with version information in its various formats.</div></div>",3786:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3786\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;Path</div></div></div><div class=\"TTSummary\">A struct encapsulating a file path string.&nbsp; This is needed because Natural Docs needs to be able to handle all three path formats at once, not just the local format.&nbsp; Natural Docs on Windows may be reading a configuration file from Natural Docs on Linux and vice versa.</div></div>",4096:"<div class=\"NDToolTip TInformation LCSharp\"><div class=\"TTSummary\">All configuration files are text files in UTF-8.&nbsp; They may appear with or without the Unicode BOM and using any line break format.&nbsp; The parsing behavior can be tweaked on a file by file basis by setting the FileFormatFlags.</div></div>",4098:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype4098\" class=\"NDPrototype NoParameterForm\"><div class=\"PPrePrototypeLine\"><span class=\"SHMetadata\">[Flags]</span></div><span class=\"SHKeyword\">public enum</span> FileFormatFlags : <span class=\"SHKeyword\">byte</span></div></div>",4109:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4109\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> Get (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">identifier,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">out</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the next identifier/value pair, if any.&nbsp; Returns whether it was successful.</div></div>",4121:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4121\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public void</span> TryToAnnotateWithErrors (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ErrorList&nbsp;</td><td class=\"PName last\">errorList</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Attempts to provide comment annotations for all the config files with errors appearing in a passed ErrorList.&nbsp; Only errors that have Error.File and Error.LineNumber set will be applied.</div></div>",4129:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype4129\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> lineNumber</div><div class=\"TTSummary\">The line number of the last value returned, or zero if none.</div></div>"});