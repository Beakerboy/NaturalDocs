NDContentPage.OnToolTipsLoaded({49:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype49\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;CodeDB.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">A class to manage information about various aspects of the code and its documentation.</div></div>",364:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype364\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;CommentTypes.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">A module to handle Comments.txt and all the comment type settings within Natural Docs.</div></div>",778:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype778\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Comments.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">A module which will handle comment parsing.</div></div>",1113:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1113\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Config.</span>&#8203;ProjectConfig</div></div></div><div class=\"TTSummary\">A class representing the entire project configuration from Project.txt or equivalent sources.</div></div>",1160:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1160\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Errors.</span>&#8203;ErrorList</div></div></div><div class=\"TTSummary\">A list of Error objects.</div></div>",1200:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1200\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Config.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">A class to manage the engine\'s configuration.</div></div>",1221:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1221\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> ReparseEverything { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">If set, all source files are going to be reparsed.&nbsp; Modules <b>MUST</b> check this and rebuild their data files from scratch if it\'s set.&nbsp; This is important because this gets set if certain data files are corrupted (such as Languages.nd) and thus various numeric IDs are not guaranteed to mean the same thing they did on the last run.</div></div>",1320:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1320\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Files.</span>&#8203;Processor</div></div></div><div class=\"TTSummary\">A module which handles processing changes to the files Natural Docs scans.&nbsp; In addition to source files, this includes image files that can be referenced with &quot;(see image.jpg)&quot; and extras tied to CSS styles.</div></div>",1360:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1360\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Files.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">A module which handles all the files Natural Docs scans.&nbsp; In addition to source files, this includes image files that can be referenced with &quot;(see image.jpg)&quot; and extras tied to CSS styles.</div></div>",1670:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1670\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Languages.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">A module to handle Languages.txt and all the language parsers within Natural Docs.</div></div>",2030:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2030\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Links.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">A module that manages scoring links.&nbsp; Links and their targets are still stored in CodeDB.Manager, but this handles the logic of determining how well each link and target match and generating scores for them.</div></div>",2872:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2872\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Output.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">A class to manage all the output builders.</div></div>",2888:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2888\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">abstract public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Output.</span>&#8203;Builder</div></div></div><div class=\"TTSummary\">The base class for an output builder.</div></div>",3051:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3051\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;SearchIndex.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">Multithreading: Thread Safety Notes</div></div>",3567:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3567\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;Version</div></div></div><div class=\"TTSummary\">A struct for dealing with version information in its various formats.</div></div>",3786:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3786\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;Path</div></div></div><div class=\"TTSummary\">A struct encapsulating a file path string.&nbsp; This is needed because Natural Docs needs to be able to handle all three path formats at once, not just the local format.&nbsp; Natural Docs on Windows may be reading a configuration file from Natural Docs on Linux and vice versa.</div></div>",3949:"<div class=\"NDToolTip TInterface LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3949\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;IStartupWatcher</div></div></div><div class=\"TTSummary\">An interface for any class that wants to watch events that occur during initialization.</div></div>",3951:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3951\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> OnStartPossiblyLongOperation (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operationName</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Called whenever an operation is starting that <b>might</b> take a long time.&nbsp; In some cases it will be over instantaneously, in others it could cause a significant, user-noticeable delay.&nbsp; The operation name will be one of the following, but you must design the watcher code for any possibility because future versions may add new operation names:</div></div>",3968:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3968\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> Dispose (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">graceful</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Shuts down the engine instance.&nbsp; Pass to it whether it was a graceful shutdown, as opposed to closing because of an error or exception.</div></div>",3971:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3971\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> Start (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Errors.</td><td class=\"PType\">ErrorList&nbsp;</td><td class=\"PName last\">errors,</td></tr><tr><td class=\"PModifierQualifier first\">Config.</td><td class=\"PType\">ProjectConfig&nbsp;</td><td class=\"PName last\">commandLineConfig</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Attempts to start the engine instance.&nbsp; Returns whether it was successful, and if it wasn\'t, puts any errors that prevented it on the list.&nbsp; If you wish to try to start it again, call Dispose() and &lt;Create()&gt; first.</div></div>",3973:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3973\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public string</span> GetCrashInformation (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Exception&nbsp;</td><td class=\"PName last\">exception</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Builds crash information for the passed exception.&nbsp; It is safe to use even though the program is in an unstable state.</div></div>",3977:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3977\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> StartPossiblyLongOperation (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">operationName</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Called <b>by module code only</b> to signify that a possibly long operation is about to begin.&nbsp; The operation name is arbitrary but should be documented in IStartupWatcher.OnStartPossiblyLongOperation.&nbsp; Every call should be matched with a EndPossiblyLongOperation() call, and it is up to the module code to make sure the calls are properly paired and non-overlapping.</div></div>",3978:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3978\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> EndPossiblyLongOperation ()</div><div class=\"TTSummary\">Called <b>by module code only</b> to signify that the possibly long operation previously recorded with StartPossiblyLongOperation() has concluded.</div></div>",3982:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype3982\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> Config.Manager Config { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Returns the Config.Manager associated with this instance.</div></div>",4009:"<div class=\"NDToolTip TDelegate LCSharp\"><div id=\"NDPrototype4009\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public delegate bool</span> CancelDelegate ()</div><div class=\"TTSummary\">A delegate that returns a bool of whether to cancel an operation or not.</div></div>"});