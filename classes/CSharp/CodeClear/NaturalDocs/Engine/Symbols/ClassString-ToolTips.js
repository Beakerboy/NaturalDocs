NDContentPage.OnToolTipsLoaded({93:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype93\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;CodeDB.</span>&#8203;IDLookupCache&#8203;<span class=\"TemplateSignature\">&lt;LookupType&gt;</span></div><div class=\"CPPostPrototypeLine\"><span class=\"SHKeyword\">where</span> LookupType: Collections.ILookupKey</div></div></div><div class=\"TTSummary\">A class that provides a local cache of string to ID mappings.&nbsp; The string class must implement Collections.ILookupKey.</div></div>",286:"<div class=\"NDToolTip TInterface LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype286\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Collections.</span>&#8203;ILookupKey</div></div></div><div class=\"TTSummary\">An interface for any class that needs to be indexed with a specific key that differs from what\'s returned by ToString().</div></div>",3118:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype3118\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public const char</span> Level1</div><div class=\"TTSummary\">A character that can be used to separate strings which do not contain any other separator characters.</div></div>",3119:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype3119\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public const char</span> Level2</div><div class=\"TTSummary\">A character that can be used to separate strings which may contain Level1 characters.</div></div>",3124:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3124\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Symbols.</span>&#8203;SymbolString</div></div></div><div class=\"TTSummary\">A struct encapsulating a symbol string, which is a normalized way of representing a hierarchal code element or topic, such as &quot;PackageA.PackageB.FunctionC&quot;.</div></div>",3234:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3234\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Symbols.</span>&#8203;ClassString</div></div></div><div class=\"TTSummary\">A struct encapsulating a class string, which is a normalized way of representing what class a given topic is in.&nbsp; This also covers databases and any other hierarchy that uses a class ID.</div></div>",3236:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype3236\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public enum</span> HierarchyType : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">Which hierarchy the ClassString is for.&nbsp; The numeric values match the values in &lt;CodeDB.Classes.Hierarchy&gt;.</div></div>",3240:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype3240\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public const char</span> SeparatorChar</div><div class=\"TTSummary\">The character used to separate string components.</div></div>",3248:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype3248\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public int</span> LanguageID { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The ID of the language the class is associated with, or zero if it\'s irrelevant.</div></div>",3250:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype3250\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> LookupKey { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The key to use with CodeDB.IDLookupCache.</div></div>",3255:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3255\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public override string</span> ToString ()</div><div class=\"TTSummary\">Returns the ContextString as a string.&nbsp; This is always case sensitive, unlike LookupKey.</div></div>",3260:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3260\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private string</span> classString</div><div class=\"TTSummary\">The combined class string.</div></div>"});