NDSummary.OnToolTipsLoaded("CSharpClass:CodeClear.NaturalDocs.Engine.Symbols.EndingSymbol",{3191:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3191\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Symbols.</span>&#8203;EndingSymbol</div></div></div><div class=\"TTSummary\">A struct encapsulating the ending symbol from a symbol string, which is a normalized way of representing the last part of a hierarchal code element or topic, such as &quot;functionc&quot; in &quot;PackageA.PackageB.FunctionC&quot;.&nbsp; Unlike SymbolStrings, ending symbols are case-insensitive.</div></div>",3193:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3193\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">private</span> EndingSymbol (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">newEndingSymbol</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",3194:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3194\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static public</span> EndingSymbol FromExportedString (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">exportedEndingSymbol</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates an EndingSymbol from the passed string which originally came from another EndingSymbol object.&nbsp; This skips the normalization stage because it should already be in the proper format.&nbsp; Only use this when retrieving EndingSymbols that were stored as plain text in a database or other data file.</div></div>",3195:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3195\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static internal</span> EndingSymbol FromSymbolStringSegment (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">symbolStringSegment</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates an EndingSymbol from a segment of text split off from a SymbolString.&nbsp; This function should only be called by SymbolString, other code should use SymbolString.EndingSymbol instead.&nbsp; This assumes the string segment has already been normalized by SymbolString.</div></div>",3197:"<div class=\"NDToolTip TOperator LCSharp\"><div id=\"NDPrototype3197\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static implicit operator string</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">EndingSymbol&nbsp;</td><td class=\"PName last\">endingSymbolObject</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">A cast operator to covert the symbol to a string.</div></div>",3198:"<div class=\"NDToolTip TOperator LCSharp\"><div id=\"NDPrototype3198\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool operator</span>== (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">EndingSymbol&nbsp;</td><td class=\"PName last\">a,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName last\">b</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",3199:"<div class=\"NDToolTip TOperator LCSharp\"><div id=\"NDPrototype3199\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public static bool operator</span>!= (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">EndingSymbol&nbsp;</td><td class=\"PName last\">a,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName last\">b</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",3200:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3200\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public override string</span> ToString ()</div><div class=\"TTSummary\">Returns the SymbolString as a string.</div></div>",3201:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3201\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public override int</span> GetHashCode ()</div></div>",3202:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3202\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public override bool</span> Equals (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName last\">other</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",3203:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3203\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public int</span> CompareTo (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">object</span>&nbsp;</td><td class=\"PName last\">other</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",3205:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype3205\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">private string</span> endingSymbol</div><div class=\"TTSummary\">The symbol, <u>always</u> in normalized form.</div></div>"});