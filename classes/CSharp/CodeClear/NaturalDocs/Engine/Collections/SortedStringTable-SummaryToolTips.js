NDSummary.OnToolTipsLoaded("CSharpClass:CodeClear.NaturalDocs.Engine.Collections.SortedStringTable",{263:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype263\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Collections.</span>&#8203;SortedStringTable&#8203;<span class=\"TemplateSignature\">&lt;ObjectType&gt;</span></div></div></div><div class=\"TTSummary\">A generic sorted lookup table for mapping strings to other objects.&nbsp; This is preferable to a SortedDictionary&lt;string, object&gt; class because</div></div>",264:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype264\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> SortedStringTable (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">KeySettings&nbsp;</td><td class=\"PName\">keySettings&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">KeySettings.Literal</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates an empty table using the default string comparer.</div></div>",265:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype265\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> SortedStringTable (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">IComparer&lt;<span class=\"SHKeyword\">string</span>&gt;&nbsp;</td><td class=\"PName\">comparer,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">KeySettings&nbsp;</td><td class=\"PName\">keySettings&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">KeySettings.Literal</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates an empty table with a custom string comparer.</div></div>",266:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype266\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public void</span> Add (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key,</td></tr><tr><td class=\"PType first\">ObjectType&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a new value to the table, overwriting the previous value if it already existed.</div></div>",267:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype267\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public bool</span> Remove (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Removes a value from the table.&nbsp; Returns whether the key was present in the table or not.&nbsp; It does not throw an exception if it did not exist.</div></div>",268:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype268\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public bool</span> ContainsKey (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns whether the table contains a specific key.&nbsp; It will always return false for null.</div></div>",269:"<div class=\"NDToolTip TOperator LCSharp\"><div id=\"NDPrototype269\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new public</span> ObjectType <span class=\"SHKeyword\">this</span> [</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">] { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</td></tr></table></div><div class=\"TTSummary\">An index operator.&nbsp; When getting, returns null if the key doesn\'t exist instead of throwing an exception.&nbsp; When setting, creates an entry for the key or overwrites the existing one if it doesn\'t exist.</div></div>",271:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype271\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> KeySettings keySettings</div><div class=\"TTSummary\">Which normalizations to apply to the keys.</div></div>"});