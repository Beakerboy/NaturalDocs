NDSummary.OnToolTipsLoaded("CSharpClass:CodeClear.NaturalDocs.Engine.SQLite.Query",{2934:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2934\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;SQLite.</span>&#8203;Query</div></div></div><div class=\"TTSummary\">An object representing a SQLite query.</div></div>",2937:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2937\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> Query ()</div><div class=\"TTSummary\">Query objects should be created by SQLite.Connection, not directly.</div></div>",2938:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2938\" class=\"NDPrototype NoParameterForm\">~Query ()</div></div>",2939:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2939\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> Prepare (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">Connection&nbsp;</td><td class=\"PName last\">connection,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">statement,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">params</span>&nbsp;</td><td class=\"PType\">Object[]&nbsp;</td><td class=\"PName last\">values</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Prepares a SQL statement for execution.&nbsp; If values are specified, BindValues() is called on them.&nbsp; This function should only be called by SQLite.Connection.</div></div>",2940:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2940\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> BindValues (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">params</span>&nbsp;</td><td class=\"PType\">Object[]&nbsp;</td><td class=\"PName last\">values</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Binds values to any question marks in the SQL statement.&nbsp; Any values that aren\'t integers, strings, or doubles will have ToString called on them.</div></div>",2941:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2941\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> Step ()</div><div class=\"TTSummary\">Executes the statement until it returns a row or completes.&nbsp; Returns true if it returns a row or false if there are no more.&nbsp; This also resets the column index used by functions like NextIntColumn().</div></div>",2942:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2942\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public int</span> IntColumn (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">columnIndex</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the value of an integer column in a row found by Step().&nbsp; The column indexes start at zero.</div></div>",2943:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2943\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public string</span> StringColumn (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">columnIndex</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the value of a string column in a row found by Step().&nbsp; The column indexes start at zero.</div></div>",2944:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2944\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public long</span> LongColumn (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">columnIndex</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the value of a 64-bit integer column in a row found by Step().&nbsp; The column indexes start at zero.</div></div>",2945:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2945\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public double</span> DoubleColumn (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">columnIndex</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the value of a double (floating point) column in a row found by Step().&nbsp; The column indexes start at zero.</div></div>",2946:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2946\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public int</span> NextIntColumn ()</div><div class=\"TTSummary\">Returns the integer value of the next column in a row found by Step().&nbsp; NextColumn functions start at the first column after each Step() and move to the next one on each call.</div></div>",2947:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2947\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> NextStringColumn ()</div><div class=\"TTSummary\">Returns the string value of the next column in a row found by Step().&nbsp; NextColumn functions start at the first column after each Step() and move to the next one on each call.</div></div>",2948:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2948\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public long</span> NextLongColumn ()</div><div class=\"TTSummary\">Returns the 64-bit integer value of the next column in a row found by Step().&nbsp; NextColumn functions start at the first column after each Step() and move to the next one on each call.</div></div>",2949:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2949\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public double</span> NextDoubleColumn ()</div><div class=\"TTSummary\">Returns the double (floating point) value of the next column in a row found by Step().&nbsp; NextColumn functions start at the first column after each Step() and move to the next one on each call.</div></div>",2950:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2950\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> Reset (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">clearBindings</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Restarts the query from the beginning.&nbsp; Can optionally clear its bindings.</div></div>",2952:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2952\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public void</span> Dispose ()</div></div>",2953:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2953\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> Dispose (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">strictRulesApply</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",2955:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2955\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> IntPtr statementHandle</div><div class=\"TTSummary\">A handle to the prepared SQLite statement.</div></div>",2956:"<div class=\"NDToolTip TVariable LCSharp\"><div class=\"TTSummary\">The Connection that created this query.</div></div>",2957:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2957\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected</span> Connection connection</div></div>",2958:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2958\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected int</span> columnIndex</div><div class=\"TTSummary\">The current column index when using functions like NextIntColumn().</div></div>"});