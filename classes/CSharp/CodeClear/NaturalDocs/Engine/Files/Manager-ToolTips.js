NDContentPage.OnToolTipsLoaded({241:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype241\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Collections.</span>&#8203;StringSet</div></div></div><div class=\"TTSummary\">A general lookup table for tracking the existence of strings in a set.&nbsp; This is preferable to a HashSet class because</div></div>",1160:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1160\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Errors.</span>&#8203;ErrorList</div></div></div><div class=\"TTSummary\">A list of Error objects.</div></div>",1200:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1200\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Config.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">A class to manage the engine\'s configuration.</div></div>",1285:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1285\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Files.&#8203;FileSources.</span>&#8203;Folder</div></div></div><div class=\"TTSummary\">A file source representing a specific folder on disk.</div></div>",1362:"<div class=\"NDToolTip TFile LCSharp\"><div class=\"TTSummary\">A binary file which stores the state of the source files as of Natural Docs\' last run.</div></div>",1366:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1366\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> AddFileSource (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">FileSource&nbsp;</td><td class=\"PName last\">source</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a file source to the list.&nbsp; This can only be called before the Engine.Instance is started, not while it is running.</div></div>",1367:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1367\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> AddFilter (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Filter&nbsp;</td><td class=\"PName last\">filter</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a filter that folders will be checked against.</div></div>",1368:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1368\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> AddChangeWatcher (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">IChangeWatcher&nbsp;</td><td class=\"PName last\">watcher</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds an object that wants to be notified whenever files change.</div></div>",1369:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1369\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> Start (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Errors.</td><td class=\"PType\">ErrorList&nbsp;</td><td class=\"PName last\">errors</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Validates the configuration and starts the module if successful.&nbsp; This can only be called once.&nbsp; If it fails, scrap the entire Engine.Instance and start again.</div></div>",1371:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1371\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> File FromID (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">fileID</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the File associated with the passed file ID, or null if there isn\'t one.</div></div>",1376:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1376\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> WorkOnAddingAllFiles (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">CancelDelegate&nbsp;</td><td class=\"PName last\">cancelDelegate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Works on the task of going through all the files in all the FileSources and calling AddOrUpdateFile() on each one.&nbsp; This is a parallelizable task, so multiple threads can call this function and they will divide up the work until it\'s done.</div></div>",1378:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1378\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public void</span> DeleteFilesNotInFileSources (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">CancelDelegate&nbsp;</td><td class=\"PName last\">cancelDelegate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Calls DeleteFile() on any file that doesn\'t have File.InFileSource set.  AddOrUpdateFile() automatically sets this flag, so after WorkOnAddingAllFiles() successfully completes this will delete any files that existed on the last run but no longer exist.</div></div>",1380:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1380\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> AddOrUpdateFile (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Path&nbsp;</td><td class=\"PName\">name,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">FileType&nbsp;</td><td class=\"PName\">type,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\">DateTime&nbsp;</td><td class=\"PName\">lastModified,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">forceReparse&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">false</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a file or updates its last modification time.&nbsp; If the file was not previously known to the class, it will be treated as new, whereas if it was known but has a different modification time it will be treated as changed.&nbsp; Returns whether this call changed anything.&nbsp; It is okay to call this multiple times on the same file.</div></div>",1381:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype1381\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> DeleteFile (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Path&nbsp;</td><td class=\"PName last\">name</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Notifies the class that the file has been deleted.&nbsp; Returns whether this call changed anything.&nbsp; It is okay to call this multiple times on the same file.</div></div>",1388:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1388\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> IList&lt;FileSource&gt; FileSources { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">Retrieves a read-only list of the file sources this instance has.</div></div>",1396:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype1396\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected object</span> accessLock</div><div class=\"TTSummary\">An object used for a monitor that prevents more than one thread from accessing any of the variables at a time.</div></div>",1411:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1411\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Files.</span>&#8203;Filter</div></div></div><div class=\"TTSummary\">A base class for a filter.</div></div>",1415:"<div class=\"NDToolTip TInterface LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1415\"><div class=\"CPEntry TInterface Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">interface</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Files.</span>&#8203;IChangeWatcher</div></div></div><div class=\"TTSummary\">An interface for any class that wants to watch for changes in the file list.</div></div>",1421:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype1421\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public enum</span> FileType : <span class=\"SHKeyword\">byte</span></div><div class=\"TTSummary\">The type of an input file.</div></div>",1438:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1438\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">abstract public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Files.</span>&#8203;FileSource</div></div></div><div class=\"TTSummary\">The base class for a file source.</div></div>",1453:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1453\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual public int</span> Number { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The number assigned to this FileSource.&nbsp; Only necessary to implement if Type is InputType.Source or InputType.Image.</div></div>",1461:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1461\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Files.</span>&#8203;File</div></div></div><div class=\"TTSummary\">A class containing information about a file.</div></div>",1469:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype1469\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> InFileSource { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">Whether this file was found in one of Engine.Files.Manager\'s file sources.</div></div>",1479:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1479\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Files.</span>&#8203;AddAllFilesStatus</div></div></div><div class=\"TTSummary\">Statistics on the progress of FileSource.AddAllFiles().</div></div>",1493:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1493\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;IDObjects.</span>&#8203;Manager&#8203;<span class=\"TemplateSignature\">&lt;IDObjectType&gt;</span></div><div class=\"CPPostPrototypeLine\"><span class=\"SHKeyword\">where</span> IDObjectType: IDObjects.Base</div></div></div><div class=\"TTSummary\">A class for managing objects that have to be referenced either by a string ID or a unique numeric ID.&nbsp; This is a generic class.&nbsp; Set the type to be an object derived from IDObjects.Base.</div></div>",1670:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1670\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Languages.</span>&#8203;Manager</div></div></div><div class=\"TTSummary\">A module to handle Languages.txt and all the language parsers within Natural Docs.</div></div>",3786:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3786\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;Path</div></div></div><div class=\"TTSummary\">A struct encapsulating a file path string.&nbsp; This is needed because Natural Docs needs to be able to handle all three path formats at once, not just the local format.&nbsp; Natural Docs on Windows may be reading a configuration file from Natural Docs on Linux and vice versa.</div></div>",3791:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype3791\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> Prefix { <span class=\"SHKeyword\">get</span> }</div><div class=\"TTSummary\">The prefix of the path if it\'s absolute, or null if it\'s relative.&nbsp; The prefix can be &quot;C:&quot;, &quot;\\\\server&quot;, or &quot;/&quot;.</div></div>",3865:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3865\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public abstract</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;Module</div></div></div><div class=\"TTSummary\">A base class for a core part of Engine.Instance.</div></div>",3962:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype3962\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;Instance</div></div></div><div class=\"TTSummary\">A class for managing the overall Natural Docs engine.</div></div>",3971:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype3971\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public bool</span> Start (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Errors.</td><td class=\"PType\">ErrorList&nbsp;</td><td class=\"PName last\">errors,</td></tr><tr><td class=\"PModifierQualifier first\">Config.</td><td class=\"PType\">ProjectConfig&nbsp;</td><td class=\"PName last\">commandLineConfig</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Attempts to start the engine instance.&nbsp; Returns whether it was successful, and if it wasn\'t, puts any errors that prevented it on the list.&nbsp; If you wish to try to start it again, call Dispose() and &lt;Create()&gt; first.</div></div>",4009:"<div class=\"NDToolTip TDelegate LCSharp\"><div id=\"NDPrototype4009\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public delegate bool</span> CancelDelegate ()</div><div class=\"TTSummary\">A delegate that returns a bool of whether to cancel an operation or not.</div></div>",4042:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype4042\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.</span>&#8203;BinaryFile</div></div></div><div class=\"TTSummary\">A class to handle reading standard Natural Docs binary configuration files.&nbsp; This class does NOT support binary files prior to version 2.0.&nbsp; Supporting those files isn\'t really necessary due to the vast changes appearing with 2.0.</div></div>"});