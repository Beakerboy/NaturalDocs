NDSummary.OnToolTipsLoaded("CSharpClass:CodeClear.NaturalDocs.Engine.Output.Components.JSMenuData",{2509:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype2509\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">CodeClear.&#8203;NaturalDocs.&#8203;Engine.&#8203;Output.&#8203;Components.</span>&#8203;JSMenuData</div></div></div><div class=\"TTSummary\">A helper class to build the JavaScript menu data for Output.Builders.HTML.&nbsp; See &lt;JavaScript Menu Data&gt; for the output format.</div></div>",2511:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2511\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> JSMenuData (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Builders.</td><td class=\"PType\">HTML&nbsp;</td><td class=\"PName last\">htmlBuilder</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",2512:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2512\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public</span> StringTable&lt;IDObjects.NumberSet&gt; Build ()</div><div class=\"TTSummary\">Generates JSON files for all entries in the menu.&nbsp; It returns a StringTable mapping the file type strings (&quot;files&quot;, &quot;classes&quot;, etc.) to a IDObjects.NumberSet representing all the files that were generated.&nbsp; So &quot;files.js&quot;, &quot;files2.js&quot;, and &quot;files3.js&quot; would map to &quot;files&quot; -&gt; {1-3}.</div></div>",2513:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2513\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> GenerateJSON (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MenuEntries.Base.</td><td class=\"PType\">Container&nbsp;</td><td class=\"PName last\">container</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Generates JSON for all the entries in the passed container.</div></div>",2514:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2514\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> SegmentMenu (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MenuEntries.Base.</td><td class=\"PType\">Container&nbsp;</td><td class=\"PName last\">container,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">dataFileType,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">ref</span>&nbsp;</td><td class=\"PType\">StringTable&lt;IDObjects.NumberSet&gt;&nbsp;</td><td class=\"PName last\">usedDataFiles</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Segments the menu into smaller pieces and generates data file names.</div></div>",2515:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2515\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> BuildOutput (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MenuEntries.Base.</td><td class=\"PType\">Container&nbsp;</td><td class=\"PName last\">container</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Generates the output file for the container.&nbsp; It must have ContainerExtraData.DataFileName set.&nbsp; If it finds any sub-containers that also have that set, it will recursively generate files for them as well.</div></div>",2516:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype2516\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">protected void</span> AppendMembers (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MenuEntries.Base.</td><td class=\"PType\">Container&nbsp;</td><td class=\"PName last\">container,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">StringBuilder&nbsp;</td><td class=\"PName last\">output,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">indent,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">Stack&lt;MenuEntries.Base.Container&gt;&nbsp;</td><td class=\"PName last\">containersToBuild</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">A support function for BuildOutput().&nbsp; Appends the output of the container\'s members to the string, recursively going through sub-containers as well.&nbsp; This will not include the surrounding brackets, only the comma-separated member entries.&nbsp; If it finds any sub-containers that start a new data file, it will add them to containersToBuild.</div></div>",2518:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype2518\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Builders.HTML HTMLBuilder {</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">get&nbsp;</td></tr></table></td><td class=\"PAfterParameters\">}</td></tr></table></div><div class=\"TTSummary\">The Builders.HTML object associated with this menu.</div></div>",2520:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype2520\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected const int</span> IndentSpaces</div><div class=\"TTSummary\">The number of spaces to indent each level by when building the output without file shrinking.</div></div>",2521:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype2521\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected const int</span> SegmentLength</div><div class=\"TTSummary\">The amount of data to try to fit in each JSON file before splitting it off into another one.&nbsp; This will be artificially low in debug builds to better test the loading mechanism.</div></div>",2522:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype2522\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">protected const int</span> SegmentLength</div></div>"});